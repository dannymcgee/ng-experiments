import { Component<%
if (!!changeDetection) {
	%>, ChangeDetectionStrategy<%
}
if (construct) {
	%>, ElementRef<%
}
if (onInit) {
	%>, OnInit<%
}
if (onDestroy) {
	%>, OnDestroy<%
} %> } from '@angular/core';

import { EmotionComponent, EmotionStylesheet } from '<%= emotionPath %>';
import { <%= classify(name) %>Styles } from './<%= dasherize(name) %>.component.styles';

@Component({
	selector: '<%= selector %>',<%
if (inlineTemplate) { %>
	template: `
		<p>
			<%= dasherize(name) %> works!
		</p>
	`,<%
} else { %>
	templateUrl: './<%= dasherize(name) %>.component.html',<%
} %>
	providers: [{
		provide: EmotionStylesheet,
		useClass: <%= classify(name) %>Styles,
	}],<%
if (!!changeDetection) {
%>
	changeDetection: <%
	if (changeDetection === 'OnPush') {
		%>ChangeDetectionStrategy.OnPush,<%
	} else if (changeDetection === 'Default') {
		%>ChangeDetectionStrategy.Default,<%
	}
} %>
})
export class <%= classify(name) %><%= classify(type) %>
	extends EmotionComponent<<%= classify(name) %>Styles><%
if (onInit || onDestroy) { %>
	implements<%
}
if (onInit) {
	%> OnInit<%
}
if (onDestroy) {
	if (onInit) {
		%>,<%
	}
	%> OnDestroy<%
} %>
{<%
if (construct) {
%>
	constructor(
		public elementRef: ElementRef,
		styles: EmotionStylesheet
	) {
		super(elementRef, styles);
	}
<%
}
if (onInit) {
%>
	ngOnInit(): void {
		super.ngOnInit();
	}
<%
}
if (onDestroy) {
%>
	ngOnDestroy(): void {
		super.ngOnDestroy();
	}
<%
}
%>}
